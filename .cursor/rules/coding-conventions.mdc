---
alwaysApply: true
---
# 编码规范与提交约定

- 语言/框架：后端 TypeScript（Medusa v2），前端 TypeScript（Next.js App Router）。
- 风格：遵循现有格式化配置；不要大范围无关重排；保持现有缩进风格与宽度。
- 命名：
  - 函数用动词短语、变量用名词短语，避免缩写。
  - 公共 API/导出显式标注类型；避免 `any` 与不安全断言。
- 控制流：
  - 使用早返回；优先处理边界/异常分支；避免 3 层以上深嵌套。
  - 仅在有意义的情况下捕获异常，不要吞错。
- 注释：
  - 解释“为什么”而非“如何”；避免冗余注释；复杂逻辑前置简短说明。
  - 不要在代码内部加入用于解释编辑动作的旁白注释。
- 复用优先：
  - 在定义新函数/组件/API 前，先检索 `front/src/modules/**`、`front/src/lib/**`、`backend/src/modules/**` 是否已有可复用能力。
  - 避免重复造轮子，保持 API 一致性与幂等性。
- 文件大小：
  - 单文件过大时进行拆分；组件/服务单一职责，避免“上帝对象/组件”。
- 环境变量：
  - 前端读取 `MEDUSA_BACKEND_URL`、`NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY`；
  - 后端读取 `DATABASE_URL`、`STORE_CORS`/`ADMIN_CORS`/`AUTH_CORS`、`JWT_SECRET`、`COOKIE_SECRET`。
- 安全：
  - Admin API 保持鉴权；Store API 配置 CORS 白名单；按需速率限制。
- 提交（commit）：
  - 信息简洁、指明影响范围与动机；分组提交，避免混杂无关改动。

